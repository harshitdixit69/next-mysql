{
  "openapi": "3.0.0",
  "info": {
    "title": "Asset Management API",
    "description": "API endpoints for managing users and assets with CRUD operations",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Local development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "your-password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate user and get JWT token",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "your-password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/assets": {
      "get": {
        "tags": ["Assets"],
        "summary": "Get all assets",
        "description": "Retrieve a list of all assets",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Asset"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Assets"],
        "summary": "Create a new asset",
        "description": "Create a new asset with the provided information (Admin only)",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AssetInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Asset created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an asset",
        "description": "Update an existing asset's information",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "Asset ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AssetInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asset updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an asset",
        "description": "Delete an existing asset",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "Asset ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Asset deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Asset not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get users with pagination and filters",
        "description": "Retrieve a list of users with optional pagination, search, and filters",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 5,
              "minimum": 1
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term for filtering users by name, email, phone, or address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Filter users by role",
            "schema": {
              "type": "string",
              "enum": ["USER", "ADMIN"]
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "description": "Filter users by active status",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "totalPages": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user with the provided information",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "put": {
        "summary": "Update a user",
        "description": "Update an existing user's information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Delete an existing user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User ID"
          },
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "User's address",
            "nullable": true
          },
          "role": {
            "type": "string",
            "enum": ["USER", "ADMIN"],
            "description": "User's role"
          },
          "isActive": {
            "type": "boolean",
            "description": "User's active status"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "UserInput": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number"
          },
          "address": {
            "type": "string",
            "description": "User's address"
          },
          "role": {
            "type": "string",
            "enum": ["USER", "ADMIN"],
            "description": "User's role"
          },
          "isActive": {
            "type": "boolean",
            "description": "User's active status"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "Asset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Dell XPS 15 Laptop"
          },
          "type": {
            "type": "string",
            "example": "Hardware"
          },
          "description": {
            "type": "string",
            "example": "High-performance developer laptop"
          },
          "status": {
            "type": "string",
            "enum": ["AVAILABLE", "IN_USE", "MAINTENANCE", "RETIRED"],
            "example": "AVAILABLE"
          },
          "location": {
            "type": "string",
            "example": "Main Office"
          },
          "department": {
            "type": "string",
            "example": "Engineering"
          },
          "purchaseDate": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-25T00:00:00.000Z"
          },
          "purchaseCost": {
            "type": "string",
            "example": "1899.99"
          },
          "vendor": {
            "type": "string",
            "example": "Dell"
          },
          "warrantyExpiration": {
            "type": "string",
            "format": "date-time",
            "example": "2027-03-25T00:00:00.000Z"
          },
          "serialNumber": {
            "type": "string",
            "example": "XPS15-2024-001"
          },
          "barcode": {
            "type": "string",
            "example": "DELL-XPS15-001"
          },
          "lastMaintenance": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-25T00:00:00.000Z"
          },
          "nextMaintenance": {
            "type": "string",
            "format": "date-time",
            "example": "2024-09-25T00:00:00.000Z"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "notes": {
            "type": "string",
            "example": "Assigned to senior developers"
          },
          "assignedUserId": {
            "type": "integer",
            "nullable": true,
            "example": null
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["name", "type"]
      },
      "AssetInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Dell XPS 15 Laptop"
          },
          "type": {
            "type": "string",
            "example": "Hardware"
          },
          "description": {
            "type": "string",
            "example": "High-performance developer laptop"
          },
          "status": {
            "type": "string",
            "enum": ["AVAILABLE", "IN_USE", "MAINTENANCE", "RETIRED"],
            "example": "AVAILABLE"
          },
          "location": {
            "type": "string",
            "example": "Main Office"
          },
          "department": {
            "type": "string",
            "example": "Engineering"
          },
          "purchaseDate": {
            "type": "string",
            "format": "date",
            "example": "2024-03-25"
          },
          "purchaseCost": {
            "type": "number",
            "format": "float",
            "example": 1899.99
          },
          "vendor": {
            "type": "string",
            "example": "Dell"
          },
          "warrantyExpiration": {
            "type": "string",
            "format": "date",
            "example": "2027-03-25"
          },
          "serialNumber": {
            "type": "string",
            "example": "XPS15-2024-001"
          },
          "barcode": {
            "type": "string",
            "example": "DELL-XPS15-001"
          },
          "lastMaintenance": {
            "type": "string",
            "format": "date",
            "example": "2024-03-25"
          },
          "nextMaintenance": {
            "type": "string",
            "format": "date",
            "example": "2024-09-25"
          },
          "image": {
            "type": "string",
            "format": "binary"
          },
          "notes": {
            "type": "string",
            "example": "Assigned to senior developers"
          },
          "assignedUserId": {
            "type": "integer",
            "example": 1
          }
        },
        "required": ["name", "type"]
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "User ID"
              },
              "name": {
                "type": "string",
                "description": "User's full name"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address"
              },
              "role": {
                "type": "string",
                "enum": ["USER", "ADMIN"],
                "description": "User's role"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "JWT token for authentication",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      }
    }
  }
} 